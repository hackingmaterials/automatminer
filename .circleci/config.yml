version: 2

jobs:
  py367:
    working_directory: ~/py367_automatminer
    docker:
      - image: circleci/python:3.6.7
        environment:
          CODACY_PROJECT_TOKEN: "0cdf090f6d5f4f8783fcf3ce04c6a1d6"
          CI: "CIRCLE"
    steps:
      - checkout

    # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: setup env and run tests
          command: |
            python3 -m venv test_env
            . test_env/bin/activate
            pip install -q --upgrade pip
            pip install --quiet -r requirements.txt

            # pip install --quiet -r requirements-optional.txt

            # temporarily avoid pip install of matminer
            mkdir matminer
            cd matminer
            git clone https://github.com/hackingmaterials/matminer.git
            cd matminer
            pip install -q -e .
            cd ../..

            pip install -e .
            pip install -q coverage
            pip install -q codacy-coverage

            coverage run setup.py test
            coverage xml
            python-codacy-coverage -r coverage.xml
          no_output_timeout: 120m

      - save_cache:
          paths:
          - ./test_env
          key: v1-dependencies-{{ checksum "requirements.txt" }}


  py372:
    working_directory: ~/py372_automatminer
    docker:
      - image: circleci/python:3.7.2
        environment:
          CODACY_PROJECT_TOKEN: "0cdf090f6d5f4f8783fcf3ce04c6a1d6"
          CI: "CIRCLE"
    steps:
      - checkout

    # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: setup env and run tests
          command: |
            python3 -m venv test_env
            . test_env/bin/activate
            pip install -q --upgrade pip
            pip install --quiet -r requirements.txt

            # pip install --quiet -r requirements-optional.txt

            # temporarily avoid pip install of matminer
            mkdir matminer
            cd matminer
            git clone https://github.com/hackingmaterials/matminer.git
            cd matminer
            pip install -q -e .
            cd ../..

            pip install -e .
            pip install -q coverage
            pip install -q codacy-coverage

            coverage run setup.py test
            coverage xml
            python-codacy-coverage -r coverage.xml
          no_output_timeout: 120m

      - save_cache:
          paths:
          - ./test_env
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  full_py372:
    working_directory: ~/py372_automatminer
    docker:
      - image: circleci/python:3.7.2
        environment:
          CODACY_PROJECT_TOKEN: "0cdf090f6d5f4f8783fcf3ce04c6a1d6"
          CI: "RUNFULL"
    steps:
      - checkout

    # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: setup env and run tests
          command: |
            python3 -m venv test_env
            . test_env/bin/activate
            pip install -q --upgrade pip
            pip install --quiet -r requirements.txt

            # pip install --quiet -r requirements-optional.txt

            # temporarily avoid pip install of matminer
            mkdir matminer
            cd matminer
            git clone https://github.com/hackingmaterials/matminer.git
            cd matminer
            pip install -q -e .
            cd ../..

            pip install -e .
            pip install -q coverage
            pip install -q codacy-coverage

            coverage run setup.py test
            coverage xml
            python-codacy-coverage -r coverage.xml
          no_output_timeout: 120m

      - save_cache:
          paths:
          - ./test_env
          key: v1-dependencies-{{ checksum "requirements.txt" }}

workflows:
  version: 2
  run_tests_on_commit:
    jobs:
      - py372
